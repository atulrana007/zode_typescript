version: "3"

volumes:
  exclude:

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: "bitnami/kafka:latest"
    container_name: "kafka"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus
    user: root
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
    restart: always

  nodeexporter:
    build: .
    command: bash -c "rm -rf /usr/local/app/node_modules/* && yarn dev src/app.ts"
    volumes:
      - ./:/usr/local/app/
      - exclude:/usr/local/app/node_modules/
    ports:
      - 9100:9100

  # grafana:
  #   image: grafana/grafana:8.0.2
  #   container_name: grafana
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
  #     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   restart: unless-stopped
  #   expose:
  #     - 3000
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"
